/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_SCRABBLESERVERSTUB_H_
#define JSONRPC_CPP_STUB_SCRABBLESERVERSTUB_H_

#include <jsonrpccpp/server.h>

class ScrabbleServerStub : public jsonrpc::AbstractServer<ScrabbleServerStub>
{
    public:
        ScrabbleServerStub(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<ScrabbleServerStub>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("Status.Ping", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT,  NULL), &ScrabbleServerStub::Status_PingI);
            this->bindAndAddMethod(jsonrpc::Procedure("Scrabble.NewGame", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "dictionary",jsonrpc::JSON_OBJECT,"gameboard",jsonrpc::JSON_OBJECT,"gameid",jsonrpc::JSON_INTEGER,"letters",jsonrpc::JSON_OBJECT,"players",jsonrpc::JSON_STRING, NULL), &ScrabbleServerStub::Scrabble_NewGameI);
            this->bindAndAddMethod(jsonrpc::Procedure("Scrabble.NextMove", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "gameid",jsonrpc::JSON_INTEGER,"gamestate",jsonrpc::JSON_ARRAY,"tiles",jsonrpc::JSON_ARRAY, NULL), &ScrabbleServerStub::Scrabble_NextMoveI);
        }

        inline virtual void Status_PingI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->Status_Ping();
        }
        inline virtual void Scrabble_NewGameI(const Json::Value &request, Json::Value &response)
        {
            response = this->Scrabble_NewGame(request["dictionary"], request["gameboard"], request["gameid"].asInt(), request["letters"], request["players"].asString());
        }
        inline virtual void Scrabble_NextMoveI(const Json::Value &request, Json::Value &response)
        {
            response = this->Scrabble_NextMove(request["gameid"].asInt(), request["gamestate"], request["tiles"]);
        }
        virtual Json::Value Status_Ping() = 0;
        virtual Json::Value Scrabble_NewGame(const Json::Value& dictionary, const Json::Value& gameboard, int gameid, const Json::Value& letters, const std::string& players) = 0;
        virtual Json::Value Scrabble_NextMove(int gameid, const Json::Value& gamestate, const Json::Value& tiles) = 0;
};

#endif //JSONRPC_CPP_STUB_SCRABBLESERVERSTUB_H_
